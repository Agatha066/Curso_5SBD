// <auto-generated />
using System;
using CooperativaMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CooperativaMVC.Migrations
{
    [DbContext(typeof(BancoDeDados))]
    partial class BancoDeDadosModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CooperativaMVC.Models.Associado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("MargemConsignada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalarioMensal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorEmprestado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Associados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MargemConsignada = 0m,
                            Nome = "João",
                            SalarioMensal = 3000m,
                            ValorEmprestado = 0m
                        },
                        new
                        {
                            Id = 2,
                            MargemConsignada = 0m,
                            Nome = "Maria",
                            SalarioMensal = 4000m,
                            ValorEmprestado = 0m
                        },
                        new
                        {
                            Id = 3,
                            MargemConsignada = 0m,
                            Nome = "Pedro",
                            SalarioMensal = 2500m,
                            ValorEmprestado = 0m
                        });
                });

            modelBuilder.Entity("CooperativaMVC.Models.BemDuravel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Bens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "TV",
                            Valor = 1500m
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Geladeira",
                            Valor = 2500m
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Notebook",
                            Valor = 3000m
                        });
                });

            modelBuilder.Entity("CooperativaMVC.Models.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssociadoId")
                        .HasColumnType("int");

                    b.Property<int>("BemDuravelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataContrato")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("Prazo")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxaJuros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorContrato")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorPagamento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociadoId");

                    b.HasIndex("BemDuravelId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Contratos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssociadoId = 1,
                            BemDuravelId = 1,
                            DataContrato = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmpresaId = 1,
                            FuncionarioId = 1,
                            Prazo = 12,
                            TaxaJuros = 0.05m,
                            ValorContrato = 5000m,
                            ValorPagamento = 0m,
                            VendedorId = 1
                        },
                        new
                        {
                            Id = 2,
                            AssociadoId = 2,
                            BemDuravelId = 1,
                            DataContrato = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmpresaId = 2,
                            FuncionarioId = 2,
                            Prazo = 24,
                            TaxaJuros = 0.08m,
                            ValorContrato = 8000m,
                            ValorPagamento = 0m,
                            VendedorId = 1
                        },
                        new
                        {
                            Id = 3,
                            AssociadoId = 3,
                            BemDuravelId = 2,
                            DataContrato = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmpresaId = 3,
                            FuncionarioId = 3,
                            Prazo = 18,
                            TaxaJuros = 0.06m,
                            ValorContrato = 6000m,
                            ValorPagamento = 0m,
                            VendedorId = 2
                        });
                });

            modelBuilder.Entity("CooperativaMVC.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ComissaoRecebida")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxaComissao")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComissaoRecebida = 0m,
                            Nome = "Empresa A",
                            TaxaComissao = 0.05m
                        },
                        new
                        {
                            Id = 2,
                            ComissaoRecebida = 0m,
                            Nome = "Empresa B",
                            TaxaComissao = 0.07m
                        },
                        new
                        {
                            Id = 3,
                            ComissaoRecebida = 0m,
                            Nome = "Empresa C",
                            TaxaComissao = 0.1m
                        });
                });

            modelBuilder.Entity("CooperativaMVC.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LimiteEndividamentoMensal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NomeLimpoNaPraca")
                        .HasColumnType("bit");

                    b.Property<decimal>("SalarioMensal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "123.456.789-00",
                            LimiteEndividamentoMensal = 900m,
                            Nome = "João Silva",
                            NomeLimpoNaPraca = true,
                            SalarioMensal = 3000m
                        },
                        new
                        {
                            Id = 2,
                            CPF = "987.654.321-00",
                            LimiteEndividamentoMensal = 1200m,
                            Nome = "Maria Santos",
                            NomeLimpoNaPraca = true,
                            SalarioMensal = 4000m
                        },
                        new
                        {
                            Id = 3,
                            CPF = "567.890.123-00",
                            LimiteEndividamentoMensal = 750m,
                            Nome = "Pedro Oliveira",
                            NomeLimpoNaPraca = false,
                            SalarioMensal = 2500m
                        });
                });

            modelBuilder.Entity("CooperativaMVC.Models.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PagamentoId")
                        .HasColumnType("int");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit");

                    b.Property<bool>("RegistroSPC")
                        .HasColumnType("bit");

                    b.Property<decimal>("SaldoDevedor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorPagamento")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("PagamentoId");

                    b.ToTable("Pagamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContratoId = 1,
                            DataPagamento = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pago = true,
                            RegistroSPC = false,
                            SaldoDevedor = 4000m,
                            Status = "Pago",
                            ValorPagamento = 1000m
                        },
                        new
                        {
                            Id = 2,
                            ContratoId = 1,
                            DataPagamento = new DateTime(2023, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pago = true,
                            RegistroSPC = false,
                            SaldoDevedor = 3000m,
                            Status = "Pago",
                            ValorPagamento = 1000m
                        },
                        new
                        {
                            Id = 3,
                            ContratoId = 2,
                            DataPagamento = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pago = true,
                            RegistroSPC = false,
                            SaldoDevedor = 7200m,
                            Status = "Pago",
                            ValorPagamento = 800m
                        });
                });

            modelBuilder.Entity("CooperativaMVC.Models.Vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalarioBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxaComissao")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Vendedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Matricula = "VND001",
                            Nome = "João",
                            SalarioBase = 2000m,
                            TaxaComissao = 0.1m
                        },
                        new
                        {
                            Id = 2,
                            Matricula = "VND002",
                            Nome = "Maria",
                            SalarioBase = 2500m,
                            TaxaComissao = 0.15m
                        });
                });

            modelBuilder.Entity("CooperativaMVC.Models.Contrato", b =>
                {
                    b.HasOne("CooperativaMVC.Models.Associado", "Associado")
                        .WithMany()
                        .HasForeignKey("AssociadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperativaMVC.Models.BemDuravel", "BemDuravel")
                        .WithMany()
                        .HasForeignKey("BemDuravelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperativaMVC.Models.Empresa", "Empresa")
                        .WithMany("Contratos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperativaMVC.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperativaMVC.Models.Vendedor", "Vendedores")
                        .WithMany("ContratosVendidos")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Associado");

                    b.Navigation("BemDuravel");

                    b.Navigation("Empresa");

                    b.Navigation("Funcionario");

                    b.Navigation("Vendedores");
                });

            modelBuilder.Entity("CooperativaMVC.Models.Pagamento", b =>
                {
                    b.HasOne("CooperativaMVC.Models.Contrato", "Contrato")
                        .WithMany("Pagamentos")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperativaMVC.Models.Pagamento", null)
                        .WithMany("Parcela")
                        .HasForeignKey("PagamentoId");

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("CooperativaMVC.Models.Contrato", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("CooperativaMVC.Models.Empresa", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("CooperativaMVC.Models.Pagamento", b =>
                {
                    b.Navigation("Parcela");
                });

            modelBuilder.Entity("CooperativaMVC.Models.Vendedor", b =>
                {
                    b.Navigation("ContratosVendidos");
                });
#pragma warning restore 612, 618
        }
    }
}
